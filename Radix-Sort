#Radix Sort / Bucket Sort

def count_sort(arr,exp):
    n=len(arr)
    output=[0] * n
    count=[0]*10   # 0 -> 9 empty bucket for count of digits
    for i in range(n):          # Frequencies of units position of no's
        index=(arr[i]//exp)%10
        count[index]+=1
    for i in range(1,10):
        count[i]+=count[i-1]
    i=n-1
    while i>=0:
        index=(arr[i]//exp)%10
        output[count[index]-1] = arr[i]
        count[index]-=1
        i-=1
    for i in range(n):
        arr[i]=output[i]

def radix_sort(arr):
    max_num=max(arr)
    exp=1
    while max_num//exp>0:
        count_sort(arr,exp)
        exp *=10
'''
arr=[170,45,75,90,802,24,2,66]
print("Before Sort", arr)
radix_sort(arr)
print("Ater Sort", arr)'''

s=int(input("Enter size of list:"))
arr=[]
for _ in range(s):
    arr.append(int(input("Enter Elements:")))
print("Before Sort", arr)
radix_sort(arr)
print("Ater Sort", arr)




#Output:
Enter size of list: 10
Enter Elements: 432
Enter Elements: 8
Enter Elements: 530
Enter Elements: 90
Enter Elements: 88
Enter Elements: 231
Enter Elements: 11
Enter Elements: 45
Enter Elements: 677
Enter Elements: 199
Before Sort [432, 8, 530, 90, 88, 231, 11, 45, 677, 199]
Ater Sort [8, 11, 45, 88, 90, 199, 231, 432, 530, 677]

